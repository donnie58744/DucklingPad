
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author leath
 */
public class window extends javax.swing.JFrame {

    public String fileName = "stickyNote.txt";
    public String fontSize = "fontSize.txt";
    public String posX = "posX.txt";
    public String posY = "posY.txt";
    public String pos = "pos.txt";
    public String TrueFalseFile = "tff.txt";
    public String winSzX = "winSzX.txt";
    public String winSzY = "winSxY.txt";
    public boolean lock;
    File tffObj = new File(TrueFalseFile);
    
    /**
     * Creates new form window
     */
    public window() {
        initComponents();
        createFile();
        changeFont();
        loadFile();
        startUpFont();
        getPOS();
        getWindowSize();
        getLockState();
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        fontSizeBox = new javax.swing.JTextField();
        enterButton = new javax.swing.JButton();
        unlockButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        lockButton = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DucklingPad V-1.5");

        enterButton.setText("Enter");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        unlockButton.setText("Unlock");
        unlockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlockButtonActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        textArea.setLineWrap(true);
        textArea.setRows(3);
        textArea.setTabSize(3);
        textArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textAreaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(textArea);

        lockButton.setText("Lock");
        lockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(fontSizeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(unlockButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lockButton))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fontSizeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterButton)
                    .addComponent(unlockButton)
                    .addComponent(lockButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 353, 325);
    }// </editor-fold>//GEN-END:initComponents

    private void textAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textAreaKeyReleased
        try {
            FileWriter myWriter = new FileWriter(fileName);
            myWriter.write(textArea.getText());
            myWriter.close();
            System.out.println("Successfully wrote to the file.");
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_textAreaKeyReleased

    public void getPOS() {
        try {
            File myX = new File(posX);
            File myY = new File(posY);
            Scanner xR = new Scanner(myX);
            Scanner yR = new Scanner(myY);
            while (xR.hasNextLine() & yR.hasNextLine()) {
                String x = xR.nextLine();
                String y = yR.nextLine();
                this.setLocation(Integer.parseInt(x), Integer.parseInt(y));
                System.out.println();
            }
            xR.close();
            yR.close();
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }
    
    public void getWindowSize() {
        File windowSizeX = new File(winSzX);
        File windowSizeY = new File(winSzY);
        try {
            Scanner xR = new Scanner(windowSizeX);
            Scanner yR = new Scanner(windowSizeY);
            
            while (xR.hasNextLine() & yR.hasNextLine()) {
                String x = xR.nextLine();
                String y = yR.nextLine();
                
                this.setSize(Integer.parseInt(x), Integer.parseInt(y));
                System.out.println();
            }
            xR.close();
            yR.close();
            
        }catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }
    
    public void getLockState() {
        try {
            Scanner myReader = new Scanner(tffObj);
            while (myReader.hasNextLine()) {
                String data = myReader.nextLine();
                this.setUndecorated(Boolean.parseBoolean(data));
                System.out.println(data);
            }
            myReader.close();
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }

    public void startUpFont() {
        Font font = textArea.getFont();
        float size = Integer.parseInt(fontSizeBox.getText());
        textArea.setFont(font.deriveFont(size));
    }

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        try {
            FileWriter myWriter = new FileWriter(fontSize);
            myWriter.write(fontSizeBox.getText());
            myWriter.close();

            Font font = textArea.getFont();
            float size = Integer.parseInt(fontSizeBox.getText());
            textArea.setFont(font.deriveFont(size));
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_enterButtonActionPerformed

    public void restart() {
        this.setVisible(lock);
    }

    private void lockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockButtonActionPerformed
        try {
            FileWriter x = new FileWriter(posX);
            FileWriter y = new FileWriter(posY);
            FileWriter tff = new FileWriter(TrueFalseFile);
            FileWriter winX = new FileWriter(winSzX);
            FileWriter winY = new FileWriter(winSzY);
            x.write(this.getX() + "");
            y.write(this.getY() + "");
            winX.write(this.getWidth() + "");
            winY.write(this.getHeight() + "");
            x.close();
            y.close();
            winX.close();
            winY.close();
            lock = true;
            if (lock) {
                System.out.println("Locked");
                lock = false;
                tff.write("true");
                tff.close();
                restart();
                this.setVisible(true);
            }
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_lockButtonActionPerformed

    private void unlockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlockButtonActionPerformed
        try {
            FileWriter tff = new FileWriter(TrueFalseFile);
            tff.write("false");
            tff.close();
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_unlockButtonActionPerformed

    public void createFile() {
        try {
            File myFile = new File(fileName);
            File tff = new File(TrueFalseFile);
            if (myFile.createNewFile() && tff.createNewFile()) {
                System.out.println("File created: " + myFile.getName());
            } else {
                System.out.println("File already exists.");
            }
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }

    public void loadFile() {
        try {
            FileReader reader = new FileReader(fileName);
            BufferedReader br = new BufferedReader(reader);
            textArea.read(br, null);
            br.close();
            textArea.requestFocus();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void changeFont() {
        Font font = textArea.getFont();
        File Fsize = new File(fontSize);
        try {
            if (Fsize.createNewFile()) {
                System.out.println("File created: " + Fsize.getName());
                FileWriter myWriter = new FileWriter(fontSize);
                myWriter.write("12");
                myWriter.close();
            } else {
                System.out.println("File already exists.");
                Scanner myReader = new Scanner(Fsize);
                String data = myReader.nextLine();
                float size = font.getSize() + Integer.parseInt(data);
                fontSizeBox.setText(data);
                textArea.setFont(font.deriveFont(size));
            }
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enterButton;
    private javax.swing.JTextField fontSizeBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton lockButton;
    private javax.swing.JTextArea textArea;
    private javax.swing.JButton unlockButton;
    // End of variables declaration//GEN-END:variables
}
